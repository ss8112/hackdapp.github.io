<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HackDApp</title>
  
  <subtitle>专注DApp教程 | 专注思维成长 | 专注应用技巧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.hackdapp.com/"/>
  <updated>2019-01-11T22:47:50.517Z</updated>
  <id>https://www.hackdapp.com/</id>
  
  <author>
    <name>zhangliang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>波场Tron-可快捷开发的实战工程模板</title>
    <link href="https://www.hackdapp.com/archives/tron_boilerplate.html"/>
    <id>https://www.hackdapp.com/archives/tron_boilerplate.html</id>
    <published>2019-01-11T22:42:54.000Z</published>
    <updated>2019-01-11T22:47:50.517Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> _                         _           _ _                 _       _</span><br><span class="line">| |_ _ __ ___  _ __       | |__   ___ (_) | ___ _ __ _ __ | | __ _| |_ ___</span><br><span class="line">| __| <span class="string">'__/ _ \| '</span>_ \ _____| <span class="string">'_ \ / _ \| | |/ _ \ '</span>__| <span class="string">'_ \| |/ _` | __/ _ \</span></span><br><span class="line"><span class="string">| |_| | | (_) | | | |_____| |_) | (_) | | |  __/ |  | |_) | | (_| | ||  __/</span></span><br><span class="line"><span class="string"> \__|_|  \___/|_| |_|     |_.__/ \___/|_|_|\___|_|  | .__/|_|\__,_|\__\___|</span></span><br><span class="line"><span class="string">                                                    |_|</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/ChainDesk/tron_boilerplate" target="_blank" rel="noopener"><strong> Tron-Boilerplate</strong></a>, 是基于Tron公链的一套可快速搭建本地私链环境、发布合约以及配置完整的标准工程模板。</p><p>该工程模板旨在于帮助大家快速工程化本地开发环境，减少环境搭建以及调试开发流程过程中所需花费的大量时间，让大家将更多精力投入到产品设计与核心业务逻辑实现上。</p><p>使用提供的工程模板，可从以下四个方面提升开发效率：</p><ul><li>一键启动或暂停私链环境</li><li>一键编译智能合约</li><li>一键发布智能合约</li><li>一键单元测试（jtest）</li></ul><p>同时，本工程模板附带了一个完整的示例代码(<strong>Todolist</strong>)，可供大家参考与学习。示例效果如下：</p><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fz354rjq8wg30go09sti8.gif" alt=""></p><p>最后，开发人员只需按照项目工程结构，编写自己的智能合约、前端页面及与SDK交互逻辑即可。</p><a id="more"></a><hr><h2 id="前置依赖"><a href="#前置依赖" class="headerlink" title="前置依赖"></a>前置依赖</h2><h3 id="1-安装docker"><a href="#1-安装docker" class="headerlink" title="1. 安装docker"></a>1. 安装docker</h3><p><strong> Install Docker for Mac</strong> : <a href="https://docs.docker.com/docker-for-mac/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-mac/</a><br><strong> Install Docker for Windows</strong>: <a href="https://docs.docker.com/docker-for-windows/install/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-windows/install/</a></p><p>更多资料可参考: <a href="https://docs.docker.com/" target="_blank" rel="noopener">https://docs.docker.com</a></p><h3 id="2-安装node"><a href="#2-安装node" class="headerlink" title="2. 安装node"></a>2. 安装node</h3><p>To install or update nvm, you can use the install script using cURL:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span><br></pre></td></tr></table></figure></p><p>or wget<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span><br></pre></td></tr></table></figure></p><p>The script clones the nvm repository to /.nvm and adds the source line to your profile (/.bash_profile, /.zshrc, /.profile, or /.bashrc)._</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$&#123;XDG_CONFIG_HOME/:-$HOME/.&#125;</span>nvm"</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> <span class="comment"># This loads nvm</span></span><br></pre></td></tr></table></figure><p>更多资料可参考: <a href="https://github.com/creationix/nvm#installation" target="_blank" rel="noopener">https://github.com/creationix/nvm#installation</a></p><h3 id="3-安装jdk8"><a href="#3-安装jdk8" class="headerlink" title="3. 安装jdk8"></a>3. 安装jdk8</h3><p>JDK8: <a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><p>如果大家不使用tron提供的tron-studio开发合约的化，可以选择不安装此项。因为使用tronbox同样也可以编译以及发布合约。</p><h3 id="4-安装tronbox"><a href="#4-安装tronbox" class="headerlink" title="4. 安装tronbox"></a>4. 安装tronbox</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g tronbox</span><br></pre></td></tr></table></figure><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fz36n5t5vqj30gk0b1aad.jpg" alt=""></p><p>注：对于最新的 Java-Tron Odyssey 3.2 版本，最小兼容的 TronBox 版本是 TronBox 2.2.1。请确保您已安装此版本。</p><p>更多资料：<a href="https://cn.developers.tron.network/docs/%E5%85%A5%E9%97%A8" target="_blank" rel="noopener">https://cn.developers.tron.network/docs/%E5%85%A5%E9%97%A8</a></p><h3 id="5-开发工具"><a href="#5-开发工具" class="headerlink" title="5. 开发工具"></a>5. 开发工具</h3><p>开发工具可根据自己喜好自由选择，个人比较推荐<strong>VSCode</strong>。</p><p>官网链接：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h2 id="工程安装与使用"><a href="#工程安装与使用" class="headerlink" title="工程安装与使用"></a>工程安装与使用</h2><h3 id="1-克隆工程"><a href="#1-克隆工程" class="headerlink" title="1. 克隆工程"></a>1. 克隆工程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:ChainDesk/tron_boilerplate.git</span><br></pre></td></tr></table></figure><p><strong>工程结构介绍</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 项目地址: https://github.com/ChainDesk/tron_boilerplate</span></span><br><span class="line"><span class="comment"># 注：待工程稳定后，可能会考虑做成插件，可使用yeoman快速构建，欢迎大家star.</span></span><br><span class="line">.</span><br><span class="line">├── README.md</span><br><span class="line">├── bin</span><br><span class="line">│   ├── libs</span><br><span class="line">│   │   └── TronStudio.jar//TronStudio开发工具包</span><br><span class="line">│   ├── start_docker.sh//启动私链</span><br><span class="line">│   ├── start_tronstudio.sh//启动TronStudio</span><br><span class="line">│   └── stop_docker.sh//停止私链</span><br><span class="line">├── build//合约编译生成目录</span><br><span class="line">│   └── contracts</span><br><span class="line">│       ├── HelloWorld.json//示例合约ABI, HelloWorld</span><br><span class="line">│       ├── Migrations.json </span><br><span class="line">│       └── TodoList.json           //示例合约ABI, TodoList</span><br><span class="line">├── contracts//合约目录，大家合约都放在这儿</span><br><span class="line">│   ├── HelloWorld.sol</span><br><span class="line">│   ├── Migrations.sol</span><br><span class="line">│   └── TodoList.sol</span><br><span class="line">├── migrations//发布合约目录</span><br><span class="line">│   ├── 1_initial_migration.js</span><br><span class="line">│   └── 2_deploy_contracts.js       //新添加的合约需要在此文件中定义，否则无法通过tronbox deploy命令发布</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json//前端App工程及依赖包定义，以及多个服务启动命令。</span><br><span class="line">├── public</span><br><span class="line">│   ├── favicon.ico</span><br><span class="line">│   ├── index.html</span><br><span class="line">│   └── manifest.json</span><br><span class="line">├── src//前端React代码目录</span><br><span class="line">│   ├── TodoList.js                 </span><br><span class="line">│   ├── contracts</span><br><span class="line">│   │   └── TodoList.json           //合约ABI文件</span><br><span class="line">│   ├── index.js</span><br><span class="line">│   ├── serviceWorker.js</span><br><span class="line">│   └── tronweb.js                  //新启动的工程，需要根据私链生成的私钥以及新发布的合约地址在此重新修改。</span><br><span class="line">├── <span class="built_in">test</span>//jtest测试目录，方便大家编写测试用例</span><br><span class="line">│   └── web.test.js</span><br><span class="line">├── tronbox-config.js</span><br><span class="line">└── tronbox.js//发布合约所依赖的配置，此文件定义了本地、测试以及正式网络的http访问地址</span><br><span class="line"></span><br><span class="line">12 directories, 27 files</span><br></pre></td></tr></table></figure></p><h3 id="2-工程初始化"><a href="#2-工程初始化" class="headerlink" title="2. 工程初始化"></a>2. 工程初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>这一步主要用于更新前端框架react所依赖的包文件，依赖包安装成功后，会在工程目录下看到一个<code>node_modules</code>文件夹。</p><p>如果你的前端选型不是react的化，也可根据自己需求进行依赖包配置修改。</p><h3 id="3-正式开发流程"><a href="#3-正式开发流程" class="headerlink" title="3. 正式开发流程"></a>3. 正式开发流程</h3><h4 id="3-1-启动链环境"><a href="#3-1-启动链环境" class="headerlink" title="3.1 启动链环境"></a>3.1 启动链环境</h4><p>执行<code>cmd+shift+p</code>，调用vscode的命令列表，选择run task从中选择start_docker任务_</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fz37ttdzdsg30go09sn7r.gif" alt=""><br>同样，如果要停止当前docker环境，只需选择stop_docker脚本即可。_</p><p>所有的执行任务配置默认只存在两个地方: </p><ul><li>tron_boilerplate/.vscode/tasks.json_</li><li>package.json中的scripts<br>大家可根据自己需要进行添加或修改，而且也可以通过IDE本身的快捷键映射对应的任务。</li></ul><h4 id="3-2-发布合约"><a href="#3-2-发布合约" class="headerlink" title="3.2 发布合约"></a>3.2 发布合约</h4><p>运行task任务，然后从中选择<code>npm deploy</code>, 即可发布当前所有合约至私链环境。</p><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fz380y3oeog30go0907wh.gif" alt=""></p><p>合约发布成功后，会显示如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Using network <span class="string">'development'</span>.</span><br><span class="line"></span><br><span class="line">Running migration: 1_initial_migration.js</span><br><span class="line">  Replacing Migrations...</span><br><span class="line">  Migrations:</span><br><span class="line">    (base58) TBC7CqpjBxGUt9Z9hhM4QNRFF5osvG3j6r</span><br><span class="line">    (hex) 410d68b1bfd19d341bd0f772fad8697432d0d771be</span><br><span class="line">Saving successful migration to network...</span><br><span class="line">Saving artifacts...</span><br><span class="line">Running migration: 2_deploy_contracts.js</span><br><span class="line">  Replacing TodoList...</span><br><span class="line">  TodoList:</span><br><span class="line">    (base58) TFyEw5qRRiZTJ5boLZJxZnv2hnhpBuvkjm</span><br><span class="line">    (hex) 4141d25df475fe0c053a9e2ed3a77faa10329185f0</span><br><span class="line">Saving successful migration to network...</span><br><span class="line">Saving artifacts...</span><br></pre></td></tr></table></figure><h4 id="3-3-修改配置参数"><a href="#3-3-修改配置参数" class="headerlink" title="3.3 修改配置参数"></a>3.3 修改配置参数</h4><p>打开文件, tron_boilerplate/src/tronweb.js, 代码如下: _<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">const fullNode = new HttpProvider(<span class="string">'http://127.0.0.1:8090'</span>);</span><br><span class="line">const solidityNode = new HttpProvider(<span class="string">'http://127.0.0.1:8091'</span>);</span><br><span class="line">const eventServer = <span class="string">'http://127.0.0.1:8092'</span>;</span><br><span class="line"></span><br><span class="line">const privateKey = <span class="string">"&lt;私钥地址&gt;"</span>;</span><br><span class="line">const contractAddr = <span class="string">"&lt;合约地址&gt;"</span>;</span><br><span class="line">......</span><br></pre></td></tr></table></figure></p><h4 id="3-4-启动react服务"><a href="#3-4-启动react服务" class="headerlink" title="3.4 启动react服务"></a>3.4 启动react服务</h4><p>执行<code>cmd+shift+p</code>，调用vscode的命令列表，选择run task从中选择<code>npm start</code>即可启动前端服务。</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fz3883zfdlg30go091txz.gif" alt=""></p><p>打开浏览器，访问<a href="http://localhost:3000，" target="_blank" rel="noopener">http://localhost:3000，</a> 验证是否成功。</p><hr><p>到此，整个工程的搭建及开发流程就介绍完毕，如中间出现任何问题欢迎加我个人微信咨询。</p><h2 id="开发资料"><a href="#开发资料" class="headerlink" title="开发资料"></a>开发资料</h2><ul><li>波场官网：<a href="https://tron.network/index?lng=zh" target="_blank" rel="noopener">https://tron.network/index?lng=zh</a></li><li>波场区块链浏览器（主网）： <a href="https://tronscan.org/#/" target="_blank" rel="noopener">https://tronscan.org/#/</a> </li><li>波场区块链浏览器 （测试网）<a href="https://test.tronscan.org/#/" target="_blank" rel="noopener">https://test.tronscan.org/#/</a> </li><li>Documentation: <a href="https://github.com/tronprotocol/Documentation" target="_blank" rel="noopener">https://github.com/tronprotocol/Documentation</a> </li><li>TRON开发者文档: <a href="https://developers.tron.network/" target="_blank" rel="noopener">https://developers.tron.network/</a></li><li>开发工具介绍: <a href="https://medium.com/tron-foundation/an-all-in-one-tool-suite-for-tron-developers-d048b2bc9b6c" target="_blank" rel="noopener">https://medium.com/tron-foundation/an-all-in-one-tool-suite-for-tron-developers-d048b2bc9b6c</a></li><li>TRON Chrome插件集成示例：<a href="https://github.com/tronpay/TronPay-Extension" target="_blank" rel="noopener">https://github.com/tronpay/TronPay-Extension</a> </li><li>Tron-BIP44 implementation： <a href="https://www.npmjs.com/package/@faast/tron-payments" target="_blank" rel="noopener">https://www.npmjs.com/package/@faast/tron-payments</a> </li><li>TRON开发项目模板(tron_boilerplate)：<a href="https://github.com/ChainDesk/tron_boilerplate" target="_blank" rel="noopener">https://github.com/ChainDesk/tron_boilerplate</a></li></ul><hr><blockquote><p>在教程中如出现不易理解或存在错误的问题，欢迎加我微信指正！<br>Name: zhangliang | WeChat: rushking2009 | Mail: <a href="mailto:zhangliang@cldy.org" target="_blank" rel="noopener">zhangliang@cldy.org</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; _                         _           _ _                 _       _&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |_ _ __ ___  _ __       | |__   ___ (_) | ___ _ __ _ __ | | __ _| |_ ___&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| __| &lt;span class=&quot;string&quot;&gt;&#39;__/ _ \| &#39;&lt;/span&gt;_ \ _____| &lt;span class=&quot;string&quot;&gt;&#39;_ \ / _ \| | |/ _ \ &#39;&lt;/span&gt;__| &lt;span class=&quot;string&quot;&gt;&#39;_ \| |/ _` | __/ _ \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| |_| | | (_) | | | |_____| |_) | (_) | | |  __/ |  | |_) | | (_| | ||  __/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt; \__|_|  \___/|_| |_|     |_.__/ \___/|_|_|\___|_|  | .__/|_|\__,_|\__\___|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;                                                    |_|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ChainDesk/tron_boilerplate&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt; Tron-Boilerplate&lt;/strong&gt;&lt;/a&gt;, 是基于Tron公链的一套可快速搭建本地私链环境、发布合约以及配置完整的标准工程模板。&lt;/p&gt;
&lt;p&gt;该工程模板旨在于帮助大家快速工程化本地开发环境，减少环境搭建以及调试开发流程过程中所需花费的大量时间，让大家将更多精力投入到产品设计与核心业务逻辑实现上。&lt;/p&gt;
&lt;p&gt;使用提供的工程模板，可从以下四个方面提升开发效率：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一键启动或暂停私链环境&lt;/li&gt;
&lt;li&gt;一键编译智能合约&lt;/li&gt;
&lt;li&gt;一键发布智能合约&lt;/li&gt;
&lt;li&gt;一键单元测试（jtest）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，本工程模板附带了一个完整的示例代码(&lt;strong&gt;Todolist&lt;/strong&gt;)，可供大家参考与学习。示例效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fz354rjq8wg30go09sti8.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后，开发人员只需按照项目工程结构，编写自己的智能合约、前端页面及与SDK交互逻辑即可。&lt;/p&gt;
    
    </summary>
    
      <category term="boilerplate" scheme="https://www.hackdapp.com/categories/boilerplate/"/>
    
    
      <category term="boilerplate" scheme="https://www.hackdapp.com/tags/boilerplate/"/>
    
  </entry>
  
  <entry>
    <title>HackDAp学习周报-01W</title>
    <link href="https://www.hackdapp.com/archives/weekly01.html"/>
    <id>https://www.hackdapp.com/archives/weekly01.html</id>
    <published>2019-01-09T12:17:23.000Z</published>
    <updated>2019-01-10T13:38:17.792Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="周报(2019)" scheme="https://www.hackdapp.com/categories/%E5%91%A8%E6%8A%A5-2019/"/>
    
    
      <category term="EOSDApp教程" scheme="https://www.hackdapp.com/tags/EOSDApp%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建EOS高效开发环境(Docker/VSCode)</title>
    <link href="https://www.hackdapp.com/archives/how%20to%20config%20the%20dev%20environment%20of%20eosdapp.html"/>
    <id>https://www.hackdapp.com/archives/how to config the dev environment of eosdapp.html</id>
    <published>2019-01-09T12:17:23.000Z</published>
    <updated>2019-01-10T23:56:48.935Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="周报(2019)" scheme="https://www.hackdapp.com/categories/%E5%91%A8%E6%8A%A5-2019/"/>
    
    
      <category term="EOSDApp教程" scheme="https://www.hackdapp.com/tags/EOSDApp%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>2019MetaLife</title>
    <link href="https://www.hackdapp.com/archives/2019metalife.html"/>
    <id>https://www.hackdapp.com/archives/2019metalife.html</id>
    <published>2019-01-07T16:28:42.000Z</published>
    <updated>2019-01-10T23:57:11.662Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MyToList"><a href="#MyToList" class="headerlink" title="MyToList"></a>MyToList</h2><ul><li>尝试每天500字，锻炼文字组织能力</li><li>做一款自己的小众产品，用户达到100人</li><li>尝试录制短视频</li><li>出版一本书籍</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MyToList&quot;&gt;&lt;a href=&quot;#MyToList&quot; class=&quot;headerlink&quot; title=&quot;MyToList&quot;&gt;&lt;/a&gt;MyToList&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;尝试每天500字，锻炼文字组织能力&lt;/li&gt;
&lt;li&gt;做一款自己的小众产品，用户
      
    
    </summary>
    
      <category term="周报(2019)" scheme="https://www.hackdapp.com/categories/%E5%91%A8%E6%8A%A5-2019/"/>
    
    
  </entry>
  
</feed>
